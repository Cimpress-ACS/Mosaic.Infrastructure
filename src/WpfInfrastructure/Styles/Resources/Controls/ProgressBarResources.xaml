<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:VP.FF.PT.Common.WpfInfrastructure.Converters"
                    xmlns:vsm="clr-namespace:System.Windows;assembly=PresentationFramework"
                    xmlns:controls="clr-namespace:VP.FF.PT.Common.WpfInfrastructure.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/VP.FF.PT.Common.WpfInfrastructure;component/Styles/Resources/BrushResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/VP.FF.PT.Common.WpfInfrastructure;component/Styles/Resources/FontResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/VP.FF.PT.Common.WpfInfrastructure;component/Styles/Resources/IconResources.xaml" />
    </ResourceDictionary.MergedDictionaries>

  <converters:ValueToAngleConverter
    x:Key="ValueToAngleConverter" />

  <ControlTemplate
    x:Key="ProgressBar.Gauge.NeedleBar"
    TargetType="{x:Type ProgressBar}">
    <Border
      Width="Auto"
      HorizontalAlignment="Center"
      VerticalAlignment="Bottom">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup
          x:Name="CommonStates">
          <VisualState
            x:Name="Determinate">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames
                Storyboard.TargetName="Needle"
                Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame
                  KeyTime="0"
                  Value="{x:Static Visibility.Visible}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames
                Storyboard.TargetName="Needle_Copy"
                Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame
                  KeyTime="0"
                  Value="{x:Static Visibility.Collapsed}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState
            x:Name="Indeterminate">
            <Storyboard
              RepeatBehavior="Forever">
              <ObjectAnimationUsingKeyFrames
                Storyboard.TargetName="Needle"
                Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame
                  KeyTime="0"
                  Value="{x:Static Visibility.Collapsed}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames
                Storyboard.TargetName="Needle_Copy"
                Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame
                  KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <Visibility>Visible</Visibility>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                Storyboard.TargetName="Needle_Copy"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                <EasingDoubleKeyFrame
                  KeyTime="0"
                  Value="-1" />
                <EasingDoubleKeyFrame
                  KeyTime="0:0:0.3"
                  Value="1">
                  <EasingDoubleKeyFrame.EasingFunction>
                    <CircleEase
                      EasingMode="EaseOut" />
                  </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame
                  KeyTime="0:0:0.6"
                  Value="-1">
                  <EasingDoubleKeyFrame.EasingFunction>
                    <CircleEase
                      EasingMode="EaseOut" />
                  </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid
        Margin="0"
        HorizontalAlignment="Left"
        VerticalAlignment="Top">
        <Grid
          x:Name="GaugeChart"
          Margin="0,6,0,0"
          HorizontalAlignment="Center"
          VerticalAlignment="Top">
          <Canvas
            Width="217"
            Height="73"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            UseLayoutRounding="False">
            <Path
              Canvas.Left="58"
              Canvas.Top="-2"
              Width="96"
              Height="25"
              Data="F1M89.883,23.636C76.951,18.488 62.915,15.637 48.228,15.637 33.27,15.637 18.99,18.596 5.862,23.925 5.862,23.925 1.089,11.428 1.089,11.428 15.623,5.202 31.536,1.761 48.224,1.761 64.583,1.761 80.2,5.067 94.502,11.063 94.502,11.063 89.883,23.636 89.883,23.636z"
              Fill="{StaticResource Brush.Gauge.Scale.Middle}" />
            <Path
              Canvas.Left="-2"
              Canvas.Top="12"
              Width="59"
              Height="59"
              Data="F1M10.235,57.433C10.235,57.433 1.264,51.504 1.264,51.504 13.221,30.367 30.774,13.08 51.809,1.87 51.809,1.87 57.357,13.77 57.357,13.77 38.005,23.551 21.696,38.744 10.235,57.433z"
              Fill="#FFE12929" />
            <Path
              Canvas.Left="156"
              Canvas.Top="12"
              Width="61"
              Height="61"
              Data="F1M1.111,13.272C1.111,13.272 6.635,1.35 6.635,1.35 28.942,12.974 47.416,31.393 59.563,54.007 59.563,54.007 50.562,59.625 50.562,59.625 38.863,39.602 21.657,23.407 1.111,13.272z"
              Fill="#FF21C187" />
          </Canvas>
        </Grid>
        <Grid
          x:Name="Needle"
          Margin="0"
          HorizontalAlignment="Center"
          VerticalAlignment="Top"
          RenderTransformOrigin="0.5,0.892">
          <Grid.RenderTransform>
            <TransformGroup>
              <ScaleTransform />
              <SkewTransform />
              <RotateTransform Angle="-58" />
              <TranslateTransform />
            </TransformGroup>
          </Grid.RenderTransform>
          <Path
            Width="33.286"
            Height="153.728"
            Data="M16.643,120.442 C25.834,120.442 33.285999,127.894 33.285999,137.085 33.285999,146.276 25.834,153.728 16.643,153.728 7.4520002,153.728 3.695726E-08,146.276 0,137.085 3.695726E-08,127.894 7.4520002,120.442 16.643,120.442 z M16.205,0 L21.899,27.153999 21.899,111.217 C20.146999,110.832 18.08,110.424 16.205,110.424 14.173,110.424 13.139,110.757 10.511,111.203 L10.511,27.153999 z"
            Fill="White"
            RenderTransformOrigin="0.5,0.892"
            Stretch="Fill">
            <Path.RenderTransform>
              <TransformGroup>
                <ScaleTransform />
                <SkewTransform />
                <RotateTransform>
                  <RotateTransform.Angle>
                    <MultiBinding
                      Converter="{StaticResource ValueToAngleConverter}">
                      <Binding
                        Path="Value"
                        RelativeSource="{RelativeSource AncestorType={x:Type ProgressBar}, Mode=FindAncestor}" />
                      <Binding
                        Path="Maximum"
                        RelativeSource="{RelativeSource AncestorType={x:Type ProgressBar}, Mode=FindAncestor}" />
                    </MultiBinding>
                  </RotateTransform.Angle>
                </RotateTransform>
                <TranslateTransform />
              </TransformGroup>
            </Path.RenderTransform>
          </Path>
        </Grid>
        <Grid
          x:Name="Needle_Copy"
          HorizontalAlignment="Center"
          VerticalAlignment="Top"
          RenderTransformOrigin="0.5,0.892">
          <Grid.RenderTransform>
            <TransformGroup>
              <ScaleTransform />
              <SkewTransform />
              <RotateTransform />
              <TranslateTransform />
            </TransformGroup>
          </Grid.RenderTransform>
          <Path
            Width="33.286"
            Height="153.728"
            Data="M16.643,120.442 C25.834,120.442 33.285999,127.894 33.285999,137.085 33.285999,146.276 25.834,153.728 16.643,153.728 7.4520002,153.728 3.695726E-08,146.276 0,137.085 3.695726E-08,127.894 7.4520002,120.442 16.643,120.442 z M16.205,0 L21.899,27.153999 21.899,111.217 C20.146999,110.832 18.08,110.424 16.205,110.424 14.173,110.424 13.139,110.757 10.511,111.203 L10.511,27.153999 z"
            Fill="White"
            RenderTransformOrigin="0.5,0.892"
            Stretch="Fill">
            <Path.RenderTransform>
              <TransformGroup>
                <ScaleTransform />
                <SkewTransform />
                <RotateTransform />
                <TranslateTransform />
              </TransformGroup>
            </Path.RenderTransform>
          </Path>
        </Grid>
      </Grid>
    </Border>
  </ControlTemplate>

    <ControlTemplate x:Key="ProgressBar.Gauge.Label" TargetType="{x:Type controls:GaugeLabel}">
        <Border Width="Auto" 
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom">
            <vsm:VisualStateManager.VisualStateGroups>
                <vsm:VisualStateGroup x:Name="CommonStates">
                    <vsm:VisualState x:Name="Determinate">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBlock3" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value> 
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="icon" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBlock2" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </vsm:VisualState>
                    <vsm:VisualState x:Name="Indeterminate">
                        <Storyboard RepeatBehavior="Forever">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBlock3" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBlock2" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="icon" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </vsm:VisualState>
                </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <Grid HorizontalAlignment="Left" 
                  Margin="0"
                  VerticalAlignment="Top">
                <Border Background="{StaticResource Brush.View.Label.Background}"
                        CornerRadius="19" 
                        Height="38.541"
                        HorizontalAlignment="Center" 
                        Margin="0,55,0,0"
                        VerticalAlignment="Top"
                        Width="{TemplateBinding Width}"
                        TextBlock.FontFamily="{StaticResource FontFamily.Standard}"
                        TextBlock.FontSize="{StaticResource FontSize.Tacho.Unit}"
                        TextBlock.Foreground="{StaticResource Brush.View.Foreground}">
                    <Grid HorizontalAlignment="Center">
                        <TextBlock x:Name="textBlock3"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Text="Pending..."
                                   Visibility="Collapsed" />
                        <StackPanel Margin="8,0"
                                    Orientation="Horizontal" 
                                    VerticalAlignment="Center">
                            <TextBlock x:Name="textBlock"
                                       FontSize="{StaticResource FontSize.Tacho.Speed}"
                                       Text="{Binding Path=Value, StringFormat=F1, RelativeSource={RelativeSource TemplatedParent}}"
                                       VerticalAlignment="Bottom" />
                            <ContentControl x:Name="IconContainer"
                                            Margin="5,8,0,4">
                                <ContentControl x:Name="icon"
                                                Style="{TemplateBinding Icon}"/>
                            </ContentControl>
                            <!--  Unit in tag  -->
                            <TextBlock x:Name="textBlock2"
                                       Margin="0,0,0,3"
                                       Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag, StringFormat={}/{0}}"
                                       VerticalAlignment="Bottom" />
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </Border>
    <!--
      <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" Value="">
      <Setter TargetName="textBlock" Property="Visibility" Value="Collapsed"/>
      <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
      <Setter TargetName="textBlock2" Property="Visibility" Value="Collapsed"/>
      <Setter TargetName="textBlock3" Property="Visibility" Value="Visible"/>
      </DataTrigger>
      </ControlTemplate.Triggers>
    -->
    </ControlTemplate>

  <ControlTemplate
    x:Key="ProgressBar.Gauge"
    TargetType="{x:Type ProgressBar}">
    <Grid>
      <ProgressBar
        Margin="5,0,0,5"
        Foreground="{TemplateBinding Foreground}"
        Maximum="{TemplateBinding Maximum}"
        Minimum="{TemplateBinding Minimum}"
        Template="{StaticResource ProgressBar.Gauge.NeedleBar}"
        Value="{TemplateBinding Value}" />
      <ProgressBar
        Width="140"
        Margin="0,-70,0,0"
        VerticalAlignment="Center"
        Foreground="{TemplateBinding Foreground}"
        Maximum="{TemplateBinding Maximum}"
        Minimum="{TemplateBinding Minimum}"
        Tag="min"
        Template="{StaticResource ProgressBar.Gauge.Label}"
        Value="{TemplateBinding Value}" />
    </Grid>
  </ControlTemplate>

</ResourceDictionary>