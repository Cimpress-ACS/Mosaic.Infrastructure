<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:VP.FF.PT.Common.WpfInfrastructure.Behaviors"
    xmlns:extensions="clr-namespace:VP.FF.PT.Common.WpfInfrastructure.Extensions"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:specialized="clr-namespace:System.Collections.Specialized;assembly=System"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:templateSelectors="clr-namespace:VP.FF.PT.Common.WpfInfrastructure.Screens.TemplateSelectors"
    xmlns:viewModels="clr-namespace:VP.FF.PT.Common.WpfInfrastructure.Screens.ViewModels"
    xmlns:model="clr-namespace:VP.FF.PT.Common.WpfInfrastructure.Screens.Model">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="TextBlockResources.xaml" />
        <ResourceDictionary
            Source="../ConverterResources.xaml" />
        <ResourceDictionary
            Source="ButtonResources.xaml" />
        <ResourceDictionary
            Source="CheckBoxResources.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Thickness
        x:Key="TagValue.Margin">
        0,5,0,0
    </Thickness>
    <GridLength x:Key="TagValue.InfoIconColumn.Width">50</GridLength>
    <GridLength x:Key="TagValue.NameColumn.Width">300</GridLength>
    <GridLength x:Key="TagValue.SeparatorColumn.Width">10</GridLength>

    <Style
        x:Key="Control.InfoIcon"
        TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Control}">
                    <Grid>
                        <Ellipse
                            Width="30"
                            Height="30"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Fill="{StaticResource Brush.AccordionControl.Header.Background}" />
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource FontFamily.Standard}"
                            FontSize="30"
                            Foreground="White"
                            Text="?" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="HeaderedContentControl.Info"
        TargetType="{x:Type HeaderedContentControl}">
        <Style.Resources>
            <Style
                TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="{StaticResource FontFamily.Standard}" />
                <Setter Property="FontSize" Value="{StaticResource FontSize.Popup}" />
                <Setter Property="Foreground" Value="{StaticResource Brush.AccordionControl.Content.Foreground}" />
            </Style>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type HeaderedContentControl}">
                    <Grid>
                        <Grid.Triggers>
                            <EventTrigger
                                RoutedEvent="MouseLeftButtonDown"
                                SourceName="InfoIcon">
                                <BeginStoryboard
                                    Name="OpenPopup">
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames
                                            Storyboard.TargetName="InfoPopup"
                                            Storyboard.TargetProperty="IsOpen">
                                            <DiscreteBooleanKeyFrame
                                                KeyTime="0:0:0.1"
                                                Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Duration="0:0:0.5"
                                            Storyboard.TargetName="InfoPopup"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.3" />
                                        <BooleanAnimationUsingKeyFrames
                                            Storyboard.TargetName="InfoIcon"
                                            Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteBooleanKeyFrame
                                                KeyTime="0:0:0.1"
                                                Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger
                                RoutedEvent="MouseLeftButtonDown"
                                SourceName="InfoPopupCloseBorder">
                                <BeginStoryboard
                                    Name="ClosePopup">
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames
                                            Storyboard.TargetName="InfoPopup"
                                            Storyboard.TargetProperty="IsOpen">
                                            <DiscreteBooleanKeyFrame
                                                KeyTime="0:0:0.1"
                                                Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Duration="0:0:0.5"
                                            Storyboard.TargetName="InfoPopup"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1" />
                                        <BooleanAnimationUsingKeyFrames
                                            Storyboard.TargetName="InfoIcon"
                                            Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteBooleanKeyFrame
                                                KeyTime="0:0:0.1"
                                                Value="true" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Grid.Triggers>
                        <ContentControl
                            x:Name="InfoIcon"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Style="{StaticResource Control.InfoIcon}" />
                        <Popup
                            x:Name="InfoPopup"
                            AllowsTransparency="True"
                            HorizontalOffset="-1"
                            Placement="Bottom"
                            PlacementTarget="{Binding ElementName=InfoIcon}"
                            VerticalOffset="-40">
                            <Grid
                                Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        Width="Auto" />
                                    <ColumnDefinition
                                        Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border
                                    x:Name="InfoPopupCloseBorder"
                                    Width="35"
                                    Height="35"
                                    Margin="0,5,0,0"
                                    VerticalAlignment="Top"
                                    Background="{StaticResource Brush.InfoButton.Background.Normal}"
                                    CornerRadius="30">
                                    <TextBlock
                                        Margin="9,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Foreground="White"
                                        Text="X" />
                                </Border>
                                <Grid
                                    Grid.Column="1"
                                    Width="531"
                                    MinWidth="50"
                                    MaxWidth="531"
                                    Margin="10,0,0,0"
                                    VerticalAlignment="Stretch"
                                    Background="{StaticResource Brush.InfoPopup.Background.Shadow}" />
                                <Border
                                    Grid.Column="1"
                                    Width="531"
                                    MinWidth="50"
                                    MaxWidth="531"
                                    Margin="10,0,0,2"
                                    BorderBrush="{StaticResource Brush.Button.Border.Normal}"
                                    BorderThickness="3">
                                    <Grid
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top"
                                        Background="{StaticResource Brush.AccordionControl.TextBox.Background}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition
                                                Height="Auto" />
                                            <RowDefinition
                                                Height="*" />
                                        </Grid.RowDefinitions>
                                        <TextBlock
                                            Grid.Row="0"
                                            Margin="7,7,5,2"
                                            FontWeight="Bold"
                                            Text="{TemplateBinding Header}"
                                            TextWrapping="Wrap" />
                                        <TextBlock
                                            Grid.Row="1"
                                            Margin="12,12"
                                            Text="{TemplateBinding Content}"
                                            TextWrapping="Wrap" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate
        x:Key="DataTemplate.Forcing.Bool"
        DataType="{x:Type viewModels:ForcingKeyValueUnitViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="Auto"
                    SharedSizeGroup="A" />
                <ColumnDefinition
                    Width="Auto" />
                <ColumnDefinition
                    Width="Auto"
                    SharedSizeGroup="B" />
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="Auto"
                    SharedSizeGroup="C" />
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="Auto"
                    SharedSizeGroup="D" />
            </Grid.ColumnDefinitions>
            <HeaderedContentControl
                Margin="9,0,10,0"
                HorizontalAlignment="Left"
                Content="{Binding Comment, Mode=OneWay}"
                Header="{Binding Name, Mode=OneWay}"
                Style="{StaticResource HeaderedContentControl.Info}" />
            <TextBlock
                Grid.Column="2"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                FontSize="26"
                Foreground="{StaticResource Brush.Label.Foreground.Standard}"><Run
                    Text="{Binding Name, Mode=OneWay}" /><Run
                    Text=":" />
            </TextBlock>
            <Grid
                Grid.Column="4">
                <CheckBox
                    x:Name="ValueCheckBox"
                    Margin="0,7"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    IsChecked="{Binding Value, Mode=TwoWay}"
                    Style="{StaticResource CheckBox.SlideToggle}"
                    Visibility="Collapsed" />
                <TextBlock
                    x:Name="ValueTextBlock"
                    Margin="0,2"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    FontSize="26"
                    Foreground="{StaticResource Brush.Label.Foreground.Standard}"
                    Text="{Binding Value, Mode=OneWay}" />
            </Grid>
            <DockPanel
                Grid.Column="6"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                LastChildFill="False">
                <ToggleButton
                    Width="36"
                    Height="38"
                    IsChecked="{Binding IsEnabled, Mode=TwoWay}"
                    Style="{StaticResource ToggleButton.Forcing}" />
                <Rectangle
                    Width="10"
                    Height="1"
                    VerticalAlignment="Center"
                    Fill="{StaticResource Brush.Forcing.Secondary}" />
                <CheckBox
                    x:Name="ForceValue"
                    IsChecked="{Binding ForceValue, Mode=TwoWay}"
                    Style="{StaticResource CheckBox.SlideToggle.Forcing}" />
            </DockPanel>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger
                Binding="{Binding IsEnabled}"
                Value="True">
                <Setter TargetName="ForceValue" Property="Foreground" Value="{StaticResource Brush.Forcing.Secondary}" />
                <Setter TargetName="ForceValue" Property="Background" Value="{StaticResource Brush.Forcing.Primary}" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding IsValueEditable}"
                Value="True">
                <Setter TargetName="ValueCheckBox" Property="Visibility" Value="Visible" />
                <Setter TargetName="ValueTextBlock" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <extensions:ForcingTemplateSelector
        x:Key="ForcingTemplateSelector"
        BoolTemplate="{StaticResource DataTemplate.Forcing.Bool}" />

    <ControlTemplate
        x:Key="TagValueControl"
        TargetType="ContentControl">
        <Grid
            Margin="{StaticResource TagValue.Margin}">
            <Grid.Resources>
                <Style
                    BasedOn="{StaticResource TextBlock.Accordion.KeyValues}"
                    TargetType="TextBlock" />
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="{StaticResource TagValue.InfoIconColumn.Width}" />
                <ColumnDefinition
                    Width="{StaticResource TagValue.NameColumn.Width}" />
                <ColumnDefinition
                    Width="{StaticResource TagValue.SeparatorColumn.Width}" />
                <ColumnDefinition
                    Width="Auto" />
                <ColumnDefinition
                    Width="40" />
            </Grid.ColumnDefinitions>
            <HeaderedContentControl
                Margin="7,0"
                VerticalAlignment="Center"
                Content="{Binding Comment}"
                Header="{Binding Name}"
                Style="{StaticResource HeaderedContentControl.Info}"
                Visibility="{Binding Path=Comment, Converter={StaticResource IsStringConverter}}" />
            <TextBlock
                Grid.Column="1"
                MaxWidth="300"
                Text="{Binding Name}"
                TextWrapping="Wrap" />
            <TextBlock
                Grid.Column="2"
                Text=":" />
            <ContentPresenter
                Grid.Column="3"
                Content="{TemplateBinding Content}" />
            <TextBlock
                Grid.Column="4"
                Text="{Binding Unit}" />
        </Grid>
    </ControlTemplate>

    <DataTemplate
        x:Key="BooleanValue"
        DataType="viewModels:KeyValueUnitViewModel">
        <ContentControl
            Template="{StaticResource TagValueControl}">
            <ComboBox
                Width="130"
                Background="{Binding Path=IsDirty, Converter={StaticResource IsValueDirtyConverter}}"
                SelectedIndex="{Binding Value, Converter={StaticResource BoolToIndexConverter}}">
                <ComboBox.ItemsSource>
                    <specialized:StringCollection>
                        <system:String>True</system:String>
                        <system:String>False</system:String>
                    </specialized:StringCollection>
                </ComboBox.ItemsSource>
            </ComboBox>
        </ContentControl>
    </DataTemplate>

    <DataTemplate
        x:Key="IntegerValue"
        DataType="viewModels:KeyValueUnitViewModel">
        <ContentControl
            Template="{StaticResource TagValueControl}">
            <TextBox
                MinWidth="80"
                MinHeight="30"
                MaxWidth="120"
                MaxHeight="47"
                VerticalAlignment="Center"
                Background="{Binding Path=IsDirty, Converter={StaticResource IsValueDirtyConverter}}"
                FontSize="{StaticResource FontSize.Accordion.Content}"
                Foreground="{StaticResource Brush.Label.Foreground.Standard}"
                Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Behaviors>
                    <behaviors:SelectAllTextBoxBehavior />
                </i:Interaction.Behaviors>
            </TextBox>
        </ContentControl>
    </DataTemplate>

    <DataTemplate
        x:Key="StringValue"
        DataType="viewModels:KeyValueUnitViewModel">
        <ContentControl
            Template="{StaticResource TagValueControl}">
            <TextBox
                MinWidth="80"
                MinHeight="30"
                MaxWidth="120"
                MaxHeight="220"
                VerticalAlignment="Center"
                Background="{Binding Path=IsDirty, Converter={StaticResource IsValueDirtyConverter}}"
                FontSize="{StaticResource FontSize.Accordion.Content}"
                Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}"
                TextWrapping="Wrap"
                VerticalScrollBarVisibility="Auto">
                <i:Interaction.Behaviors>
                    <behaviors:SelectAllTextBoxBehavior />
                </i:Interaction.Behaviors>
            </TextBox>
        </ContentControl>
    </DataTemplate>

    <DataTemplate
        x:Key="EnumValue"
        DataType="viewModels:KeyValueUnitViewModel">
        <ContentControl
            Template="{StaticResource TagValueControl}">
            <ComboBox
                Width="270"
                Background="{Binding Path=IsDirty, Converter={StaticResource IsValueDirtyConverter}}"
                ItemsSource="{Binding EnumerationMembers}"
                SelectedItem="{Binding SelectedEnumerationMember}">
                <ComboBox.ItemTemplate>
                    <DataTemplate DataType="model:EnumerationMember">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Style="{StaticResource TextBlock.Accordion.KeyValues}" Text="{Binding Comment}"/>
                            <TextBlock Style="{StaticResource TextBlock.Accordion.KeyValues}" Text=" (" Opacity="0.35"/>
                            <TextBlock Style="{StaticResource TextBlock.Accordion.KeyValues}" Text="{Binding Value}" Opacity="0.35"/>
                            <TextBlock Style="{StaticResource TextBlock.Accordion.KeyValues}" Text=")" Opacity="0.35"/>
                        </StackPanel>
                        
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>   
        </ContentControl>
    </DataTemplate>

    <DataTemplate
        x:Key="ReadOnlyValue"
        DataType="viewModels:KeyValueUnitViewModel">
        <ContentControl
            Template="{StaticResource TagValueControl}">
            <TextBlock
                Style="{StaticResource TextBlock.Accordion.KeyValues}"
                Text="{Binding Value}" />
        </ContentControl>
    </DataTemplate>

    <DataTemplate
        x:Key="CustomValue"
        DataType="viewModels:KeyValueUnitViewModel">
        <Grid
            Margin="{StaticResource TagValue.Margin}">
            <Grid.Resources>
                <Style
                    BasedOn="{StaticResource TextBlock.Accordion.KeyValues}"
                    TargetType="TextBlock" />
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    MaxWidth="50" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid.Triggers>
                <EventTrigger
                    RoutedEvent="MouseLeftButtonUp"
                    SourceName="ExpandGrid">
                    <BeginStoryboard
                        Name="ExpandChilds">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetName="ChildrenListView"
                                Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame
                                    KeyTime="0:0:0.1"
                                    Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetName="ExpandGrid"
                                Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame
                                    KeyTime="0:0:0.1"
                                    Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger
                    RoutedEvent="MouseLeftButtonUp"
                    SourceName="CollapseGrid">
                    <BeginStoryboard
                        Name="CollapseChilds">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetName="ChildrenListView"
                                Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame
                                    KeyTime="0:0:0.1"
                                    Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetName="ExpandGrid"
                                Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame
                                    KeyTime="0:0:0.1"
                                    Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>

            <Border
                x:Name="CollapseGrid"
                Width="30"
                Height="30"
                Margin="0,5,0,0"
                VerticalAlignment="Top"
                Background="{StaticResource Brush.AccordionControl.Header.Background}"
                CornerRadius="30">
                <Path
                    Data="M 8 15 L 22 15"
                    Stroke="White"
                    StrokeThickness="2" />
            </Border>

            <Border
                x:Name="ExpandGrid"
                Width="30"
                Height="30"
                Margin="0,5,0,0"
                VerticalAlignment="Top"
                Background="{StaticResource Brush.AccordionControl.Header.Background}"
                CornerRadius="30"
                Visibility="Visible">
                <Path
                    Data="M 8 15 L 22 15 M 15 8 L 15 22"
                    Stroke="White"
                    StrokeThickness="2" />
            </Border>


            <TextBlock
                Grid.Row="0"
                Grid.Column="1"
                Text="{Binding Name}" />

            <ListView
                x:Name="ChildrenListView"
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="15,0,0,0"
                Background="Transparent"
                BorderThickness="0"
                ItemsSource="{Binding Children}"
                Padding="0,30,0,0"
                Visibility="Collapsed">
                <ListView.ItemTemplateSelector>
                    <templateSelectors:TagValueTemplateSelector
                        BooleanValue="{StaticResource BooleanValue}"
                        IntValue="{StaticResource IntegerValue}"
                        ReadOnlyValue="{StaticResource ReadOnlyValue}"
                        StringValue="{StaticResource StringValue}"
                        EnumerationValue="{StaticResource EnumValue}"/>
                </ListView.ItemTemplateSelector>
                <ListView.ItemContainerStyle>
                    <Style
                        TargetType="ListViewItem">
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate
                                    TargetType="ListViewItem">
                                    <Border>
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </Grid>
    </DataTemplate>

</ResourceDictionary>