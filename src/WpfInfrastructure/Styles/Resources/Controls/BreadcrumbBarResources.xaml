<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:cal="http://www.caliburnproject.org"
  xmlns:controls="clr-namespace:VP.FF.PT.Common.WpfInfrastructure.Controls"
  xmlns:extensions="clr-namespace:VP.FF.PT.Common.WpfInfrastructure.Extensions"
  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:model="clr-namespace:VP.FF.PT.Common.WpfInfrastructure.Screens.Model"
  xmlns:system="clr-namespace:System;assembly=mscorlib">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary
      Source="../BrushResources.xaml" />
    <ResourceDictionary
      Source="../FontResources.xaml" />
    <ResourceDictionary
      Source="../IconResources.xaml" />
    <ResourceDictionary
      Source="../ConverterResources.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <system:Double
    x:Key="Button.BreadcrumbBar.Borderwidth">
    2
  </system:Double>
  <system:Double
    x:Key="Button.BreadcrumbBar.Height">
    74
  </system:Double>

  <Thickness
    x:Key="Button.BreadcrumbBar.Padding.Default"
    Bottom="4"
    Left="19"
    Right="20"
    Top="1" />

  <Thickness
    x:Key="Button.BreadcrumbBar.OverlapMargin"
    Left="-29" />
  <Thickness
    x:Key="Button.BreadcrumbBar.Middle.BorderThickness"
    Bottom="{StaticResource Button.BreadcrumbBar.Borderwidth}"
    Top="{StaticResource Button.BreadcrumbBar.Borderwidth}" />
  <Thickness
    x:Key="Button.BreadcrumbBar.First.BorderThickness"
    Bottom="{StaticResource Button.BreadcrumbBar.Borderwidth}"
    Top="{StaticResource Button.BreadcrumbBar.Borderwidth}" />
  <Thickness
    x:Key="Button.BreadcrumbBar.Last.BorderThickness"
    Bottom="{StaticResource Button.BreadcrumbBar.Borderwidth}"
    Right="{StaticResource Button.BreadcrumbBar.Borderwidth}"
    Top="{StaticResource Button.BreadcrumbBar.Borderwidth}" />
  <Thickness
    x:Key="Button.BreadcrumbBar.Single.BorderThickness"
    Bottom="{StaticResource Button.BreadcrumbBar.Borderwidth}"
    Right="{StaticResource Button.BreadcrumbBar.Borderwidth}"
    Top="{StaticResource Button.BreadcrumbBar.Borderwidth}" />

  <StreamGeometry
    x:Key="BreadcrumbBar.Button.Arrow.Left">
    F1 M22,74 L8.6736172E-19,74 19.711,37 8.6736172E-19,0 22,0
  </StreamGeometry>

  <StreamGeometry
    x:Key="BreadcrumbBar.Button.Arrow.Right">
    F1M0,74 2.27,74 21.891,37.473C22.05,37.178,22.05,36.814,21.891,36.518L2.271,0 0,0
  </StreamGeometry>

  <Style
    x:Key="Button.BreadcrumbBar.Base"
    BasedOn="{StaticResource {x:Type Button}}"
    TargetType="{x:Type Button}">
    <Setter Property="Padding" Value="{StaticResource Button.BreadcrumbBar.Padding.Default}" />
    <Setter Property="Height" Value="{StaticResource Button.BreadcrumbBar.Height}" />
    <Setter Property="MinHeight" Value="{StaticResource Button.BreadcrumbBar.Height}" />
    <Setter Property="BorderBrush" Value="{StaticResource Brush.BreadcrumbBar.Button.Border}" />
    <Setter Property="Foreground" Value="{StaticResource Brush.BreadcrumbBar.Button.Foreground}" />
    <Setter Property="Background" Value="{StaticResource Brush.BreadcrumbBar.Button.Background}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize.BreadcrumbBar}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Button}">
          <Grid
            ClipToBounds="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition
                Width="Auto" />
              <ColumnDefinition
                Width="*" />
              <ColumnDefinition
                Width="Auto" />
            </Grid.ColumnDefinitions>
            <Path
              x:Name="arrowLeft"
              Grid.Column="0"
              Margin="0,-2,-2,-2"
              Data="{TemplateBinding controls:BreadcrumbBarButton.GeometryLeft}"
              Fill="{TemplateBinding Background}"
              Stretch="UniformToFill"
              Stroke="{TemplateBinding BorderBrush}"
              StrokeThickness="{StaticResource Button.BreadcrumbBar.Borderwidth}" />
            <Path
              x:Name="arrowRight"
              Grid.Column="2"
              Margin="-2,-2,0,-2"
              Data="{TemplateBinding controls:BreadcrumbBarButton.GeometryRight}"
              Fill="{TemplateBinding Background}"
              Stretch="UniformToFill"
              Stroke="{TemplateBinding BorderBrush}"
              StrokeThickness="{StaticResource Button.BreadcrumbBar.Borderwidth}" />
            <Border
              x:Name="border"
              Grid.Column="1"
              Margin="0,-2,0,-2"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
              <DockPanel
                Margin="{TemplateBinding Padding}"
                LastChildFill="True">
                <ContentControl
                  x:Name="icon"
                  Margin="0,0,7,0"
                  DockPanel.Dock="Left"
                  Style="{TemplateBinding extensions:AttachedProperties.IconStyle}" />
                <TextBlock
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="Center"
                  FontSize="{StaticResource FontSize.BreadcrumbBar}"
                  Foreground="{TemplateBinding Foreground}"
                  Text="{TemplateBinding Content}" />
              </DockPanel>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true" />

            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="arrowLeft" Property="Fill" Value="{StaticResource Brush.Button.Background.Pressed}" />
              <Setter TargetName="arrowRight" Property="Fill" Value="{StaticResource Brush.Button.Background.Pressed}" />
              <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Button.Background.Pressed}" />
              <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Button.Border.Pressed}" />
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style
    x:Key="Button.BreadcrumbBar.Single"
    BasedOn="{StaticResource Button.BreadcrumbBar.Base}"
    TargetType="{x:Type Button}">
    <Setter Property="Background" Value="{StaticResource Brush.BreadcrumbBar.LastButton.Background}" />
    <Setter Property="BorderThickness" Value="{StaticResource Button.BreadcrumbBar.Single.BorderThickness}" />
  </Style>

  <Style
    x:Key="Button.BreadcrumbBar.First"
    BasedOn="{StaticResource Button.BreadcrumbBar.Base}"
    TargetType="{x:Type Button}">
    <Setter Property="controls:BreadcrumbBarButton.GeometryRight" Value="{StaticResource BreadcrumbBar.Button.Arrow.Right}" />
    <Setter Property="BorderThickness" Value="{StaticResource Button.BreadcrumbBar.First.BorderThickness}" />
  </Style>

  <Style
    x:Key="Button.BreadcrumbBar.Middle"
    BasedOn="{StaticResource Button.BreadcrumbBar.Base}"
    TargetType="{x:Type Button}">
    <Setter Property="controls:BreadcrumbBarButton.GeometryLeft" Value="{StaticResource BreadcrumbBar.Button.Arrow.Left}" />
    <Setter Property="controls:BreadcrumbBarButton.GeometryRight" Value="{StaticResource BreadcrumbBar.Button.Arrow.Right}" />
    <Setter Property="BorderThickness" Value="{StaticResource Button.BreadcrumbBar.Middle.BorderThickness}" />
  </Style>

  <Style
    x:Key="Button.BreadcrumbBar.Last"
    BasedOn="{StaticResource Button.BreadcrumbBar.Base}"
    TargetType="{x:Type Button}">
    <Setter Property="controls:BreadcrumbBarButton.GeometryLeft" Value="{StaticResource BreadcrumbBar.Button.Arrow.Left}" />
    <Setter Property="BorderThickness" Value="{StaticResource Button.BreadcrumbBar.Last.BorderThickness}" />
    <Setter Property="Background" Value="{StaticResource Brush.BreadcrumbBar.LastButton.Background}" />
  </Style>

  <DataTemplate
    x:Key="ItemTemplate.BreadcrumbBar.Button.Single"
    DataType="{x:Type model:BreadcrumbBarItem}">
    <Button
      Content="{Binding DisplayName, Converter={StaticResource ToUpperStringConverter}}"
      IsEnabled="False"
      Style="{StaticResource Button.BreadcrumbBar.Single}">
      <extensions:AttachedProperties.IconStyle>
        <MultiBinding
          Converter="{StaticResource IconKeyToIconStyleMultiConverter}"
          ConverterParameter="Bc">
          <Binding
            RelativeSource="{RelativeSource Self}" />
          <Binding
            Path="IconKey" />
        </MultiBinding>
      </extensions:AttachedProperties.IconStyle>
    </Button>
  </DataTemplate>

  <DataTemplate
    x:Key="ItemTemplate.BreadcrumbBar.Button.First"
    DataType="{x:Type model:BreadcrumbBarItem}">
    <Button
      Content="{Binding DisplayName, Converter={StaticResource ToUpperStringConverter}}"
      Style="{StaticResource Button.BreadcrumbBar.First}">
      <extensions:AttachedProperties.IconStyle>
        <MultiBinding
          Converter="{StaticResource IconKeyToIconStyleMultiConverter}"
          ConverterParameter="Bc">
          <Binding
            RelativeSource="{RelativeSource Self}" />
          <Binding
            Path="IconKey" />
        </MultiBinding>
      </extensions:AttachedProperties.IconStyle>
      <!--  Navigate back to home  -->
      <i:Interaction.Triggers>
        <i:EventTrigger
          EventName="Click">
          <cal:ActionMessage
            MethodName="NavigateToHome" />
        </i:EventTrigger>
      </i:Interaction.Triggers>
    </Button>
  </DataTemplate>

  <DataTemplate
    x:Key="ItemTemplate.BreadcrumbBar.Button.Middle"
    DataType="{x:Type model:BreadcrumbBarItem}">
    <Button
      Margin="{StaticResource Button.BreadcrumbBar.OverlapMargin}"
      Content="{Binding DisplayName, Converter={StaticResource ToUpperStringConverter}}"
      Style="{StaticResource Button.BreadcrumbBar.Middle}">
      <extensions:AttachedProperties.IconStyle>
        <MultiBinding
          Converter="{StaticResource IconKeyToIconStyleMultiConverter}"
          ConverterParameter="Bc">
          <Binding
            RelativeSource="{RelativeSource Self}" />
          <Binding
            Path="IconKey" />
        </MultiBinding>
      </extensions:AttachedProperties.IconStyle>
      <!--  Navigate back to module screen  -->
      <i:Interaction.Triggers>
        <i:EventTrigger
          EventName="Click">
          <cal:ActionMessage
            MethodName="NavigateToScreen">
            <cal:Parameter
              Value="{Binding RelatedScreen}" />
          </cal:ActionMessage>
        </i:EventTrigger>
      </i:Interaction.Triggers>
    </Button>
  </DataTemplate>

  <!--  IsHitTestVisible="False"  -->
  <DataTemplate
    x:Key="ItemTemplate.BreadcrumbBar.Button.Last"
    DataType="{x:Type model:BreadcrumbBarItem}">
    <Button
      Margin="{StaticResource Button.BreadcrumbBar.OverlapMargin}"
      Content="{Binding DisplayName, Converter={StaticResource ToUpperStringConverter}}"
      IsEnabled="False"
      Style="{StaticResource Button.BreadcrumbBar.Last}">
      <extensions:AttachedProperties.IconStyle>
        <MultiBinding
          Converter="{StaticResource IconKeyToIconStyleMultiConverter}"
          ConverterParameter="Bc">
          <Binding
            RelativeSource="{RelativeSource Self}" />
          <Binding
            Path="IconKey" />
        </MultiBinding>
      </extensions:AttachedProperties.IconStyle>
    </Button>
  </DataTemplate>

</ResourceDictionary>