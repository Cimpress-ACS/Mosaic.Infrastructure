<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:behaviors="clr-namespace:VP.FF.PT.Common.WpfInfrastructure.Behaviors"
  xmlns:controls="http://schemas.microsoft.com/surface/2008"
  xmlns:converters="clr-namespace:VP.FF.PT.Common.WpfInfrastructure.Converters"
  xmlns:system="clr-namespace:System;assembly=mscorlib"
  xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary
      Source="../FontResources.xaml" />
    <ResourceDictionary
      Source="../BrushResources.xaml" />
    <ResourceDictionary
      Source="../IconResources.xaml" />
    <ResourceDictionary
      Source="../ConverterResources.xaml" />
    <ResourceDictionary
      Source="../Controls/ScrollBarResources.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <converters:IsRootConverter
    x:Key="IsRootConverter" />
  <converters:IsLastItemInBranchConverter
    x:Key="IsLastItemInBranchConverter" />

  <!--  TreeView  -->
  <Style
    x:Key="Style.MasterTreeView"
    TargetType="{x:Type TreeView}">

    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="SnapsToDevicePixels" Value="False" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily.Standard}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{StaticResource FontSize.TreeViewItem}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
    <Setter Property="controls:SurfaceScrollViewer.Elasticity" Value="0,0.4" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalOnly" />
    <Setter Property="MinHeight" Value="80" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="10,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type TreeView}">
          <Grid
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <controls:SurfaceScrollViewer
              x:Name="scrollViewer"
              Width="Auto"
              Height="Auto"
              MinWidth="{TemplateBinding MinWidth}"
              MinHeight="{TemplateBinding MinHeight}"
              Margin="0,15"
              Elasticity="{TemplateBinding controls:SurfaceScrollViewer.Elasticity}"
              Focusable="False"
              Foreground="{TemplateBinding Foreground}"
              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
              Style="{StaticResource Style.SurfaceTreeView.ScrollViewer}"
              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
              <ItemsPresenter
                MinWidth="{TemplateBinding MinWidth}"
                MinHeight="{TemplateBinding MinHeight}"
                Margin="{TemplateBinding Padding}"
                ClipToBounds="False" />
              <i:Interaction.Behaviors>
                <behaviors:EmulateClickBehavior />
              </i:Interaction.Behaviors>
            </controls:SurfaceScrollViewer>
            <Border
              x:Name="Border"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style
    x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border
            Margin="5"
            CornerRadius="4">
            <Rectangle
              Margin="0,0,0,0"
              Opacity="0"
              Stroke="Black"
              StrokeDashArray="1 2"
              StrokeThickness="5" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style
    x:Key="{x:Type TreeViewItem}"
    TargetType="{x:Type TreeViewItem}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Padding" Value="1,0,0,0" />
    <Setter Property="IsExpanded" Value="True" />
    <Setter Property="FontSize" Value="{StaticResource FontSize.TreeViewItem}" />
    <Setter Property="Foreground" Value="{StaticResource Brush.Foreground}" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition
                Width="Auto" />
              <ColumnDefinition
                Width="*"
                MinWidth="19" />
              <ColumnDefinition
                Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition
                Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>

            <!--  Connecting Lines  -->
            <Path
              x:Name="HorLn2"
              Grid.Column="0"
              Width="34"
              Height="35.933"
              Margin="32,4,0,0"
              HorizontalAlignment="Left"
              VerticalAlignment="Top"
              Data="M32,33.933 C15.259,32.899 2,19.001 2,2"
              SnapsToDevicePixels="true"
              Stroke="{StaticResource Brush.TreeView.ConnectingLines}"
              StrokeEndLineCap="Round"
              StrokeStartLineCap="Round"
              StrokeThickness="4" />
            <Rectangle
              x:Name="VerLn"
              Grid.RowSpan="2"
              Width="4"
              Margin="2,0,0,-2"
              Fill="#FFbec6d1"
              RadiusX="2"
              RadiusY="2"
              SnapsToDevicePixels="true" />
            <Border
              Name="SelectorBorder"
              Grid.Column="1"
              Margin="5,6,2,5"
              HorizontalAlignment="Left"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="20">
              <StackPanel
                Margin="0,2,14,0"
                HorizontalAlignment="Left">
                <StackPanel
                  HorizontalAlignment="Left"
                  Orientation="Horizontal">
                  <Border
                    x:Name="ItemBorder"
                    VerticalAlignment="Center"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="13">
                    <ContentPresenter
                      x:Name="PART_Header"
                      Margin="14,6,0,0"
                      HorizontalAlignment="Stretch"
                      ContentSource="Header" />
                  </Border>
                  <Grid
                    Margin="10,6,0,0"
                    VerticalAlignment="Center">
                    <ContentControl
                      x:Name="WarningIcon"
                      Style="{StaticResource Icon.WarnSign}"
                      Visibility="Hidden" />
                    <ContentControl
                      x:Name="ErrorIcon"
                      Style="{StaticResource Icon.ErrorSign}"
                      Visibility="Hidden" />
                  </Grid>
                  <Grid 
                    Margin="10,6,0,0"
                    VerticalAlignment="Center">
                      <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="*" />
                          <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <ContentControl x:Name="ManualModeIcon"
                                      Visibility="Collapsed"
                                      Width="20"
                                      Margin="0,0,5,0"
                                      Grid.Column="0"
                                      Style="{StaticResource Icon.Manual}" />
                                        
                      <ContentControl x:Name="SimulationModeIcon"
                                      Visibility="Collapsed"
                                      Width="20"
                                      Grid.Column="1"
                                      Style="{StaticResource Icon.Simulation}" />
                  </Grid>
                </StackPanel>
                <StackPanel 
                  Orientation="Horizontal">
                  <TextBlock
                    x:Name="stateText"
                    Margin="14,0,0,5"
                    FontSize="{StaticResource FontSize.TreeViewItem.Substate}"
                    Foreground="{StaticResource Brush.Substate}"
                    Text="{Binding CurrentState, Converter={StaticResource ToUpperStringConverter}}" />
                    <TextBlock
                      Margin="1,0,0,5"
                      FontSize="{StaticResource FontSize.TreeViewItem.Substate}"
                      Foreground="{StaticResource Brush.Substate}"
                      Text="-" />
                    <TextBlock
                      x:Name="substateText"
                      Margin="1,0,0,5"
                      FontSize="{StaticResource FontSize.TreeViewItem.Substate}"
                      Foreground="{StaticResource Brush.Substate}"
                      Text="{Binding CurrentSubState, Converter={StaticResource ToUpperStringConverter}}" />
                    
                                </StackPanel>
              </StackPanel>
            </Border>
            <ItemsPresenter 
              x:Name="ItemsHost"
              Grid.Row="1"
              Grid.Column="1"
              Grid.ColumnSpan="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger
              Binding="{Binding ControllerState}"
              Value="Warning">
              <Setter TargetName="WarningIcon" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger
              Binding="{Binding ControllerState}"
              Value="Error">
              <Setter TargetName="ErrorIcon" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger 
              Binding="{Binding ControllerMode}" 
              Value="Manual">
              <Setter TargetName="ManualModeIcon" Property="Visibility" Value="Visible" />
            </DataTrigger>
              <DataTrigger 
              Binding="{Binding IsSimulation}" 
              Value="true">
              <Setter TargetName="SimulationModeIcon" Property="Visibility" Value="Visible" />
              </DataTrigger>
              <DataTrigger 
              Binding="{Binding CurrentSubState}" 
              Value="{x:Static system:String.Empty}">
              <Setter TargetName="substateText" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger
              Binding="{Binding CurrentSubState}"
              Value="{x:Null}">
              <Setter TargetName="substateText" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger
              Binding="{Binding IsEnabled}"
              Value="False">
              <Setter TargetName="SelectorBorder" Property="Opacity" Value="0.3" />
            </DataTrigger>

            <DataTrigger
              Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource IsRootConverter}}"
              Value="true">
              <Setter TargetName="VerLn" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="HorLn2" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="SelectorBorder" Property="Margin" Value="10,2,2,5" />
            </DataTrigger>

            <!--  This trigger changes the connecting lines if the item is the last in the list  -->
            <DataTrigger
              Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource IsLastItemInBranchConverter}}"
              Value="true">
              <Setter TargetName="VerLn" Property="Height" Value="6" />
              <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top" />
            </DataTrigger>

            <Trigger Property="IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader" Value="false" />
                <Condition Property="Width" Value="Auto" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader" Value="false" />
                <Condition Property="Height" Value="Auto" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
            </MultiTrigger>

            <Trigger Property="behaviors:PathToRoot.OnPathToRoot" Value="true">
              <Setter TargetName="SelectorBorder" Property="Background" Value="{StaticResource Brush.Selected.Background}" />
              <Setter Property="Foreground" Value="{StaticResource Brush.Selected.Foreground}" />
              <Setter TargetName="SelectorBorder" Property="CornerRadius" Value="20" />
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="SelectorBorder" Property="Background" Value="{StaticResource Brush.Selected.Foreground}" />
              <Setter Property="Foreground" Value="{StaticResource Brush.Selected.Background}" />
              <Setter TargetName="SelectorBorder" Property="Grid.ColumnSpan" Value="2" />
              <Setter TargetName="SelectorBorder" Property="CornerRadius" Value="20,0,0,20" />
              <Setter TargetName="SelectorBorder" Property="HorizontalAlignment" Value="Stretch" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>